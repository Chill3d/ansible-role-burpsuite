---
# tasks file for ansible-role-burpsuite

- name: Check that burpsuite_release_channel value is valid
  ansible.builtin.assert:
    that:
      - burpsuite_release_channel in _burpsuite_release_channel_enum
    fail_msg: "burpsuite_release_channel must be either 'stable' or 'early_adopter'"
    quiet: true
  changed_when: false
  when: burpsuite_version == "latest"

- name: Get user details
  user:
    name: "{{ burpsuite_user }}"
  register: burpsuite_user_details

- name: Set installation directory if not defined
  set_fact:
    burpsuite_dir: "{{ burpsuite_user_details.home }}/BurpSuite{{ burpsuite_product_type | capitalize }}"
  when: burpsuite_dir is undefined

- name: Install required packages
  ansible.builtin.apt:
    name: "{{ burpsuite_packages }}"
    state: present
  become: true

- name: Check if previously installed
  ansible.builtin.stat:
    path: "{{ burpsuite_dir }}/.install4j/i4jparams.conf"
  register: install4j_config_file

- block:
  - name: Read install4j config file
    ansible.builtin.slurp:
      src: "{{ burpsuite_dir }}/.install4j/i4jparams.conf"
    register: install4j_config_contents

  - name: Get current version
    ansible.builtin.set_fact:
      installed_version: "{{ install4j_config_contents.content | b64decode |
          regex_search('applicationVersion=\"[0-9.]+\"', multiline=True) |
          regex_replace('applicationVersion=\"([0-9.]+)\"', '\\1') }}"

  - name: Current version
    debug:
      msg: "Burp Suite {{ installed_version }} currently installed"
  when: install4j_config_file.stat.exists

- name: Retrieve release data from portswigger.net
  ansible.builtin.set_fact:
    burp_release_data: "{{ lookup('url', 'https://portswigger.net/burp/releases/data?lastId=-1&pageSize=20') }}"

- name: Get version number
  ansible.builtin.set_fact:
    burpsuite_version: "{{ burp_release_data | json_query(\"ResultSet.Results[?releaseChannels[0]=='\" + _burpsuite_release_channel_enum[burpsuite_release_channel] + \"' && builds[?ProductId == '\" + burpsuite_product_type + \"' && ProductPlatform=='Linux']].version | sort(@)[-1:] | [0]\") }}"

- name: Get checksum
  ansible.builtin.set_fact:
    burpsuite_installer_sha256_checksum: "{{ burp_release_data | json_query(\"ResultSet.Results[].builds[?Version == '\" + burpsuite_version + \"' && ProductId == '\" + burpsuite_product_type + \"' && ProductPlatform=='Linux'][].Sha256Checksum | [0]\") }}"

- block:
    - name: Burp Suite version
      debug:
        msg: "Installing Burp Suite {{ burpsuite_version }} ({{ _burpsuite_release_channel_enum[burpsuite_release_channel] }})"

    - name: Set installer script filename
      ansible.builtin.set_fact:
        burpsuite_installer_script: "burpsuite_{{ burpsuite_product_type }}_linux_v{{ burpsuite_version | regex_replace('\\.', '_') }}.sh"

    - name: Download Burp Suite installer
      ansible.builtin.get_url:
        url: "{{ burpsuite_download_url }}"
        dest: "/tmp/{{ burpsuite_installer_script }}"
        checksum: "sha256:{{ burpsuite_installer_sha256_checksum }}"
        owner: "{{ burpsuite_user }}"
        group: "{{ burpsuite_user_details.group }}"
        mode: "0440"
      
    - name: Create response.varfile for unattended install
      ansible.builtin.template:
        src: burpsuite_response.varfile.j2
        dest: "/tmp/burpsuite_response.varfile"
        owner: "{{ burpsuite_user }}"
        group: "{{ burpsuite_user_details.group }}"
        mode: "0440"

    - name: Install Burp Suite
      ansible.builtin.command:
        cmd: "/bin/sh {{ burpsuite_installer_script }} -q -varfile burpsuite_response.varfile -overwrite"
        chdir: "/tmp"
      become: true
      become_user: "{{ burpsuite_user }}"

    - name: Clean-up files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/{{ burpsuite_installer_script }}"
        - "/tmp/burpsuite_response.varfile"
  when: installed_version is not defined or installed_version != burpsuite_version

- name: Perform extra tasks for Burp Suite installation
  ansible.builtin.include_tasks: extra_tasks.yml
  when: burpsuite_extras_enabled
