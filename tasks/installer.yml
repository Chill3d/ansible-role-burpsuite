---
# tasks file for ansible-role-burpsuite

- name: Set facts for Burp Suite Community
  set_fact:
    burpsuite_dir: "{{ _burpsuite_community_dir }}"
    burpsuite_installer_script: "burpsuite_community_linux_{{ burpsuite_version }}.sh"
    burpsuite_jar_path: "{{ _burpsuite_community_jar_path }}"
    burpsuite_java_path: "{{ _burpsuite_community_java_path }}"
  when: burpsuite_product_type == 'community'

- name: Set facts for Burp Suite Pro
  set_fact:
    burpsuite_dir: "{{ _burpsuite_pro_dir }}"
    burpsuite_installer_script: "burpsuite_pro_linux_{{ burpsuite_version }}.sh"
    burpsuite_jar_path: "{{ _burpsuite_pro_jar_path }}"
    burpsuite_java_path: "{{ _burpsuite_pro_java_path }}"
  when: burpsuite_product_type == 'pro'

- name: Check if previously installed
  stat:
    path: "{{ burpsuite_dir }}/.install4j/i4jparams.conf"
  register: install4j_config_file

- name: Read install4j config file
  slurp:
    src: "{{ burpsuite_dir }}/.install4j/i4jparams.conf"
  register: install4j_config_contents
  when: install4j_config_file.stat.exists

- name: Get current version
  set_fact:
    installed_version: >
      "{{ install4j_config_contents.content
      | b64decode
      | regex_search('applicationVersion=\"[0-9.]+\"', multiline=True)
      | regex_replace('applicationVersion=\"([0-9.]+)\"', '\\1') }}"
  when: install4j_config_file.stat.exists

- block:
    - name: Download Burp Suite Community
      get_url:
        url: "{{ burpsuite_community_url }}{{ burpsuite_version }}"
        dest: "{{ burpsuite_installer_dir }}/{{ burpsuite_installer_script }}"
        mode: '0440'
      when: burpsuite_product_type == "community"

    - name: Create response.varfile for unattended install
      template:
        src: burpsuite_response.varfile.j2
        dest: "{{ burpsuite_installer_dir }}/burpsuite_response.varfile"

    - name: Install Burp Suite
      command: "/bin/sh {{ burpsuite_installer_script }} -q -varfile burpsuite_response.varfile -overwrite"
      args:
        chdir: "{{ burpsuite_installer_dir }}"
  when: installed_version is defined and installed_version != burpsuite_version
