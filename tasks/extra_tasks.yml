---
# Tasks for extra jars and scripts for Burp Suite

- name: Set Burp Suite extras directory if not defined
  set_fact:
    burpsuite_extras_dir: "{{ burpsuite_user_details.home }}/BurpSuiteExtras"
  when: burpsuite_extras_dir is undefined

- name: Create directory for Burp Suite extras
  ansible.builtin.file:
    path: "{{ burpsuite_extras_dir }}"
    state: directory
    owner: "{{ burpsuite_user }}"
    group: "{{ burpsuite_user_details.group }}"
    mode: "0755"

### Tasks to activate Burp Suite ###
- name: Copy autoburp.py script to extras directory
  ansible.builtin.copy:
    src: autoburp.py
    dest: "{{ burpsuite_extras_dir }}/autoburp.py"
    owner: "{{ burpsuite_user }}"
    group: "{{ burpsuite_user_details.group }}"
    mode: "0644"

- name: Activate Burp Suite and download CA public certificate
  ansible.builtin.command: 
    cmd: "python3 autoburp.py {{ burpsuite_dir }} --cacert {{ burpsuite_extras_cacert_path }} {{ (burpsuite_product_type == 'pro') |
      ternary('--license ' + burpsuite_extras_pro_license_path, '') }}"
    chdir: "{{ burpsuite_extras_dir }}"
  async: 600
  register: autoburp
  changed_when: "'Terms and conditions accepted.' in autoburp.stdout or
    'License successfully installed and activated.' in autoburp.stdout"
  become: true
  become_user: "{{ burpsuite_user }}"

### Tasks to download the Jython and JRuby jar files ###
- name: Download JRuby for Burp Suite
  ansible.builtin.get_url:
    url: "{{ burpsuite_extras_jruby_jar_url }}"
    dest: "{{ burpsuite_extras_dir }}/jruby-complete.jar"
    checksum: "{{ burpsuite_extras_jruby_jar_checksum }}"
    owner: "{{ burpsuite_user }}"
    group: "{{ burpsuite_user_details.group }}"
    mode: "0640"

- name: Download Jython for Burp Suite
  ansible.builtin.get_url:
    url: "{{ burpsuite_extras_jython_jar_url }}"
    dest: "{{ burpsuite_extras_dir }}/jython-standalone.jar"
    checksum: "{{ burpsuite_extras_jython_jar_checksum }}"
    owner: "{{ burpsuite_user }}"
    group: "{{ burpsuite_user_details.group }}"
    mode: "0640"

### Tasks for user config. This will only create the user config if the file doesn't exist ###
- name: Check for existing user config
  ansible.builtin.stat:
    path: "{{ burpsuite_user_details.home }}/.BurpSuite/UserConfig{{ burpsuite_product_type | capitalize }}.json"
  register: burpsuite_user_config_result

- name: Create Burp Suite user config
  ansible.builtin.template:
    src: UserConfig.json.j2
    dest: "{{ burpsuite_user_details.home }}/.BurpSuite/UserConfig{{ burpsuite_product_type | capitalize }}.json"
    owner: "{{ burpsuite_user }}"
    group: "{{ burpsuite_user_details.group }}"
    mode: "0600"
  when: not burpsuite_user_config_result.stat.exists
